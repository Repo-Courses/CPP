decltype is a C++ keyword used to determine the type of an expression. It returns the type of the expression that is passed as an argument, including its const or volatile qualifiers. The syntax is as follows:

int x = 0;
decltype(x) y; // y is of type int

decltype can be particularly useful when working with templates or when the type of a variable is not known at compile time.

std::pair<int, std::string> foo() { return std::make_pair(17, "C++");
}
std::tuple<int, int, float> bar() { return std::make_tuple(1, 2, 3.0);
}
int main() {
    auto [i, s] = foo(); // i is int with i == 17,
                         // s is std::string with s == "C++"
    auto [a, b, c] = bar(); // a, b are int, c is float,
}
// a == 1, b == 2, c == 3.0
